// Code generated by MockGen. DO NOT EDIT.
// Source: bookmarks.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/sh-tatsuno/shabm/entity"
)

// MockBookmarkServiceInterface is a mock of BookmarkServiceInterface interface
type MockBookmarkServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockBookmarkServiceInterfaceMockRecorder
}

// MockBookmarkServiceInterfaceMockRecorder is the mock recorder for MockBookmarkServiceInterface
type MockBookmarkServiceInterfaceMockRecorder struct {
	mock *MockBookmarkServiceInterface
}

// NewMockBookmarkServiceInterface creates a new mock instance
func NewMockBookmarkServiceInterface(ctrl *gomock.Controller) *MockBookmarkServiceInterface {
	mock := &MockBookmarkServiceInterface{ctrl: ctrl}
	mock.recorder = &MockBookmarkServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBookmarkServiceInterface) EXPECT() *MockBookmarkServiceInterfaceMockRecorder {
	return m.recorder
}

// GetAllBookmarks mocks base method
func (m *MockBookmarkServiceInterface) GetAllBookmarks() ([]entity.Bookmark, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllBookmarks")
	ret0, _ := ret[0].([]entity.Bookmark)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllBookmarks indicates an expected call of GetAllBookmarks
func (mr *MockBookmarkServiceInterfaceMockRecorder) GetAllBookmarks() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllBookmarks", reflect.TypeOf((*MockBookmarkServiceInterface)(nil).GetAllBookmarks))
}

// CreateBookmark mocks base method
func (m *MockBookmarkServiceInterface) CreateBookmark(url string, id uint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateBookmark", url, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateBookmark indicates an expected call of CreateBookmark
func (mr *MockBookmarkServiceInterfaceMockRecorder) CreateBookmark(url, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBookmark", reflect.TypeOf((*MockBookmarkServiceInterface)(nil).CreateBookmark), url, id)
}
