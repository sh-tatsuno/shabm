// Code generated by MockGen. DO NOT EDIT.
// Source: url_contents.go

// Package mock_model is a generated GoMock package.
package mock_model

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockURLContentModelInterface is a mock of URLContentModelInterface interface
type MockURLContentModelInterface struct {
	ctrl     *gomock.Controller
	recorder *MockURLContentModelInterfaceMockRecorder
}

// MockURLContentModelInterfaceMockRecorder is the mock recorder for MockURLContentModelInterface
type MockURLContentModelInterfaceMockRecorder struct {
	mock *MockURLContentModelInterface
}

// NewMockURLContentModelInterface creates a new mock instance
func NewMockURLContentModelInterface(ctrl *gomock.Controller) *MockURLContentModelInterface {
	mock := &MockURLContentModelInterface{ctrl: ctrl}
	mock.recorder = &MockURLContentModelInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockURLContentModelInterface) EXPECT() *MockURLContentModelInterfaceMockRecorder {
	return m.recorder
}

// GetTitle mocks base method
func (m *MockURLContentModelInterface) GetTitle(url string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTitle", url)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTitle indicates an expected call of GetTitle
func (mr *MockURLContentModelInterfaceMockRecorder) GetTitle(url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTitle", reflect.TypeOf((*MockURLContentModelInterface)(nil).GetTitle), url)
}
